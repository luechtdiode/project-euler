package ch.seidel.euler


import org.scalatest.FunSuite
import org.junit.runner.RunWith
import org.scalatest.junit.JUnitRunner
import ch.seidel.euler.Problem26._

@RunWith(classOf[JUnitRunner])
class Problem26Test extends FunSuite {
  
  /**
   * A unit fraction contains 1 in the numerator. The decimal representation of the unit fractions with denominators 2 to 10 are given:
   *     1/2 =   0.5
   *     1/3 =   0.(3)
   *     1/4 =   0.25
   *     1/5 =   0.2
   *     1/6 =   0.1(6)
   *     1/7 =   0.(142857)
   *     1/8 =   0.125
   *     1/9 =   0.(1)
   *     1/10  =   0.1
   * 
   * Where 0.1(6) means 0.166666..., and has a 1-digit recurring cycle. It can be seen that 1/7 has a 6-digit recurring cycle.
   *
   * Find the value of d < 1000 for which 1/d contains the longest recurring cycle in its decimal fraction part.
   */
  test("fractionalDigitsOf Fraction") {
    assert("0.(142857)*" === wrap(1,7).visual)
    assert("142857" === wrap(1,7).recurringCycle)
  }
  
  test("find longest recuring cycle") {
    val fraction = findWithLongestRecurringCycle(999)
    assert(884 === fraction.recurringCycle.length)
    assert("16581892166836215666327568667344862665310274669379450661241098677517802644964394710071210579857578840284842319430315361139369277721261444557477110885045778229908443540183112919633774160732451678535096642929806714140386571719226856561546286876907426246185147507629704984740590030518819938962360122075279755849440488301119023397761953204476093591047812817904374364191251271617497456765005086469989827060020345879959308240081383519837232960325534079348931841302136317395727365208545269582909460834181078331637843336724313326551373346897253306205493387589013224821973550356052899287894201424211597151576805696846388606307222787385554425228891149542217700915564598168870803662258392675483214649033570701932858596134282807731434384537131230925737538148524923702950152594099694811800610376398779247202441505595116988809766022380467955239064089521871820956256358087487283825025432349949135300" === fraction.recurringCycle)
  }
}
